name: CMake_Workflow_MultiJobs

on:
  push:
    branches: [ "dev_win_multi" ]
  pull_request:
    branches: [ "dev_win_multi" ]
    # This action can be manually triggered
  workflow_call:
env:
  BUILD_TYPE: Debug
jobs:
  prepare:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Support longpaths
        run: git config --system core.longpaths true
      - name: Fetch submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive
      - name: Checkout submodule branches
        run: git submodule foreach --recursive git checkout dev_win_api
      - name: Setup Git
        run: |
          git config --global user.name "${{ secrets.USERNAME }}"
          git config --global user.email "${{ secrets.EMAIL }}"
          git config --global credential.https://github.com.${{ secrets.USERNAME }} ${{ secrets.GITHUB_TOKEN }}
      - name: vcpkg install
        run: .\vcpkg_install_script.bat
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.4.0'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          dir: 'C:/'
          install-deps: 'true'
          modules: 'qtcharts qtwebengine'
          archives: 'qtbase qtsvg'
          cache: 'false'
          cache-key-prefix: 'install-qt-action'
          setup-python: 'true'
          tools: 'tools_ifw tools_qtcreator,qt.tools.qtcreator'
          set-env: 'true'
          tools-only: 'false'
          aqtversion: '==2.1.*'
          py7zrversion: '==0.19.*'
          extra: '--external 7z'
  configure:
    runs-on: windows-latest
    needs: prepare
    steps:
      - name: Configure CMake
        env:
          CMAKE_PREFIX_PATH: ${{env.Qt6_Dir}}
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} --no-warn-unused-cli -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -G "Visual Studio 17 2022" -T host=x64 -A x64
  build:
    runs-on: windows-latest
    needs: configure
    steps:
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target ALL_BUILD -j 10  
  test:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}
  install:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Install
        working-directory: ${{github.workspace}}/build
        run: cmake --install . --config ${{env.BUILD_TYPE}}
  run:
    runs-on: windows-latest
    needs: build
    steps:
      - name: run app
        working-directory: ${{github.workspace}}/build/${{env.BUILD_TYPE}}
        run: .\wgm_app.exe
  deploy:
    runs-on: windows-latest
    needs: install
    steps:
      - name: create installer and update it
        working-directory: ${{github.workspace}}/build/
        run: |
          cpack -C Debug -v
          cd ../pkg/
          XCOPY "wgm_pkg.exe" "soft_wgm_installer_update\" /K /D /H /Y
          XCOPY "wgm_application_user_manual.pdf" "soft_wgm_installer_update\" /K /D /H /Y
          cd soft_wgm_installer_update/
          git add wgm_pkg.exe
          git add wgm_application_user_manual.pdf
          git commit -m "updated installer"
          git log --pretty=oneline -n 10
          git push

